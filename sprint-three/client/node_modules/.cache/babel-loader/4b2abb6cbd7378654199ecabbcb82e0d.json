{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ed\\\\desktop\\\\edward-chiu-brainflix\\\\sprint-two\\\\src\\\\components\\\\Comments\\\\Comments.jsx\";\nimport React from \"react\"; // import avatar from \"../../assets/images/Mohan-muruge.jpg\"\n\nimport \"./Comments.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Comments(props) {\n  // let date = new Date(props.timestamp).toLocaleDateString(\"en-us\", { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" })\n  const timeAgo = time => {\n    let seconds = Math.floor((new Date() - time) / 1000);\n    let interval = seconds / 31557600;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \" years\";\n    }\n\n    interval = seconds / 2629800;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \" months\";\n    }\n\n    interval = seconds / 86400;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \" days\";\n    }\n\n    interval = seconds / 3600;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \"hours\";\n    }\n\n    interval = seconds / 60;\n\n    if (interval > 1) {\n      return Math.floor(interval) + \"minutes\";\n    }\n\n    return Math.floor(seconds) + \"seconds\";\n  };\n\n  let date = timeAgo(props.timestamp);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"commentEntry\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentEntry__avatar-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"commentEntry__content-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentEntry__name-date-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"commentEntry__name\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commentEntry__date\",\n          children: date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"commentEntry__comment-container\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"commentEntry__comment\",\n          children: props.comment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"commentEntry__button-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"commentEntry__button-delete\",\n          onClick: event => props.handleDeleteComments(event, props.commentId),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["C:/Users/Ed/desktop/edward-chiu-brainflix/sprint-two/src/components/Comments/Comments.jsx"],"names":["React","Comments","props","timeAgo","time","seconds","Math","floor","Date","interval","date","timestamp","name","comment","event","handleDeleteComments","commentId"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAO,iBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAErB;AAEA,QAAMC,OAAO,GAAIC,IAAD,IAAU;AACtB,QAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAW,CAAC,IAAIC,IAAJ,KAAaJ,IAAd,IAAsB,IAAjC,CAAd;AACA,QAAIK,QAAQ,GAAGJ,OAAO,GAAG,QAAzB;;AACA,QAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,aAAOH,IAAI,CAACC,KAAL,CAAWE,QAAX,IAAuB,QAA9B;AACH;;AACDA,IAAAA,QAAQ,GAAGJ,OAAO,GAAG,OAArB;;AACA,QAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,aAAOH,IAAI,CAACC,KAAL,CAAWE,QAAX,IAAuB,SAA9B;AACH;;AACDA,IAAAA,QAAQ,GAAGJ,OAAO,GAAG,KAArB;;AACA,QAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,aAAOH,IAAI,CAACC,KAAL,CAAWE,QAAX,IAAuB,OAA9B;AACH;;AACDA,IAAAA,QAAQ,GAAGJ,OAAO,GAAG,IAArB;;AACA,QAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,aAAOH,IAAI,CAACC,KAAL,CAAWE,QAAX,IAAuB,OAA9B;AACH;;AACDA,IAAAA,QAAQ,GAAGJ,OAAO,GAAG,EAArB;;AACA,QAAII,QAAQ,GAAG,CAAf,EAAkB;AACd,aAAOH,IAAI,CAACC,KAAL,CAAWE,QAAX,IAAuB,SAA9B;AACH;;AACD,WAAOH,IAAI,CAACC,KAAL,CAAWF,OAAX,IAAsB,SAA7B;AACH,GAvBD;;AAyBA,MAAIK,IAAI,GAAGP,OAAO,CAACD,KAAK,CAACS,SAAP,CAAlB;AAGA,sBACI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA,oBAAoCT,KAAK,CAACU;AAA1C;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAG,UAAA,SAAS,EAAC,oBAAb;AAAA,oBAAmCF;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,iCAAf;AAAA,+BACI;AAAG,UAAA,SAAS,EAAC,uBAAb;AAAA,oBAAsCR,KAAK,CAACW;AAA5C;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAQI;AAAM,QAAA,SAAS,EAAC,gCAAhB;AAAA,+BACI;AAAQ,UAAA,SAAS,EAAC,6BAAlB;AAAgD,UAAA,OAAO,EAAGC,KAAD,IAAWZ,KAAK,CAACa,oBAAN,CAA2BD,KAA3B,EAAkCZ,KAAK,CAACc,SAAxC,CAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH;;KAnDQf,Q;AAqDT,eAAeA,QAAf","sourcesContent":["import React from \"react\"\r\n// import avatar from \"../../assets/images/Mohan-muruge.jpg\"\r\nimport \"./Comments.scss\"\r\n\r\nfunction Comments(props) {\r\n\r\n    // let date = new Date(props.timestamp).toLocaleDateString(\"en-us\", { day: \"2-digit\", month: \"2-digit\", year: \"numeric\" })\r\n\r\n    const timeAgo = (time) => {\r\n        let seconds = Math.floor((new Date() - time) / 1000);\r\n        let interval = seconds / 31557600;\r\n        if (interval > 1) {\r\n            return Math.floor(interval) + \" years\";\r\n        }\r\n        interval = seconds / 2629800;\r\n        if (interval > 1) {\r\n            return Math.floor(interval) + \" months\";\r\n        }\r\n        interval = seconds / 86400;\r\n        if (interval > 1) {\r\n            return Math.floor(interval) + \" days\";\r\n        }\r\n        interval = seconds / 3600;\r\n        if (interval > 1) {\r\n            return Math.floor(interval) + \"hours\";\r\n        }\r\n        interval = seconds / 60;\r\n        if (interval > 1) {\r\n            return Math.floor(interval) + \"minutes\";\r\n        }\r\n        return Math.floor(seconds) + \"seconds\";\r\n    }\r\n\r\n    let date = timeAgo(props.timestamp)\r\n\r\n\r\n    return (\r\n        <div className=\"commentEntry\">\r\n            <div className=\"commentEntry__avatar-container\">\r\n                {/* <img className=\"commentEntry__avatar\" alt=\"\"/> */}\r\n            </div>\r\n            <div className=\"commentEntry__content-container\">\r\n                <div className=\"commentEntry__name-date-container\">\r\n                    <h3 className=\"commentEntry__name\">{props.name}</h3>\r\n                    <p className=\"commentEntry__date\">{date}</p>\r\n                </div>\r\n                <div className=\"commentEntry__comment-container\">\r\n                    <p className=\"commentEntry__comment\">{props.comment}</p>\r\n                </div>\r\n                <form className=\"commentEntry__button-container\">\r\n                    <button className=\"commentEntry__button-delete\" onClick={(event) => props.handleDeleteComments(event, props.commentId)}>Delete</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comments"]},"metadata":{},"sourceType":"module"}